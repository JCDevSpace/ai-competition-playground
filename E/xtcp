#!/usr/bin/python3

import socket
import sys
import json

HOST = "localhost"
TIMEOUT = 3

def setup_serversocket(host, port):
  serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  serversocket.settimeout(TIMEOUT)
  serversocket.bind((host, port))
  serversocket.listen(1)
  return serversocket

def read_clientsocket(clientsocket):
  chunks = []
  while True:
    data = clientsocket.recv(4096)
    if not data:
      break
    chunks.append(data.decode("utf-8"))

  return "".join(chunks)

def parse_json(input_string):
  elements = []
  position = 0
  decoder = json.JSONDecoder()

  while position != len(input_string):
    before_len = len(input_string[position:])
    after_len = len(input_string[position:].strip())
    if after_len == 0:
      break
    spaces_removed = before_len - after_len

    json_elem, json_len = decoder.raw_decode(input_string[position:].strip())

    position +=(json_len + spaces_removed)
    elements.append(json_elem)

  return elements


def main(args):
  if len(args) == 1:
    port = 4567
  elif len(args) == 2 and args[1].isnumeric():
    port = int(args[1])
  else:
    print("Usage:  ./xtcp [port number]")
    exit(1)

  serversocket = setup_serversocket(HOST, port)
  (clientsocket, address) = serversocket.accept()

  if clientsocket:
    result = parse_json(read_clientsocket(clientsocket))

    output1 = {"count" : len(results), "seq" : results}
    output2 = [len(results)]
    output2 += reversed(results)

    clientsocket.send(str(output1).encode())
    clientsocket.send(str(output2).encode())

    clientsocket.close()

  serversocket.close()


if __name__ == '__main__':
  main(sys.argv)